{"version":3,"file":"static/js/877.53e54b83.chunk.js","mappings":"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","sources":["components/inputs/CurveAreaRadioButtons.jsx","components/inputs/numInputs/MeanNumInput.jsx","components/inputs/numInputs/SDNumInput.jsx","components/inputs/numInputs/XNumInput.jsx","components/plots/plotlyUtils.js","components/forms/PFromZForm.jsx","components/plots/z/PFromZPlot.jsx","pages/zTable/PFromZ.jsx","statistics/mathUtils.js","statistics/zTable/constants.js","statistics/zTable/zPDF.js","statistics/zTable/genNormalCurve.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport * as React from 'react';\n\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nfunction CurveAreaRadioButtons(props) {\n  const { hookSetter, defaultValue } = props;\n\n  const onChange = (event) => {\n    hookSetter(event.target.value);\n  };\n\n  return (\n    <FormControl>\n      <FormLabel id=\"curve-region-radio-buttons-group\">Region</FormLabel>\n      <RadioGroup\n        row\n        onChange={onChange}\n        aria-labelledby=\"curve-region-radio-buttons-group-label\"\n        defaultValue={defaultValue || 'outside'}\n        name=\"curve-region-radio-buttons-group\"\n      >\n        <FormControlLabel value=\"below\" control={<Radio />} label=\"Below\" />\n        <FormControlLabel value=\"above\" control={<Radio />} label=\"Above\" />\n        <FormControlLabel value=\"between\" control={<Radio />} label=\"Between\" />\n        <FormControlLabel value=\"outside\" control={<Radio />} label=\"Outside\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport default CurveAreaRadioButtons;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction MeanInput(props) {\n  const { hookValue, hookSetter, step } = props;\n\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Mean\"\n      value={hookValue}\n      inputProps={{\n        step: step || 1.0,\n      }}\n      onChange={(event) => hookSetter(event.target.value)}\n    />\n  );\n}\n\nexport default MeanInput;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction SDInput(props) {\n  const {\n    hookValue, hookSetter, step, label,\n  } = props;\n\n  const onChange = (event) => {\n    let v = event.target.value;\n    if (v < 0) v = 0;\n    hookSetter(v);\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      label={label || 'Standard Deviation'}\n      value={hookValue}\n      inputProps={{\n        min: 0,\n        step: step || 0.5,\n      }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default SDInput;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction XInput(props) {\n  const {\n    hookValue, hookSetter, step, label,\n  } = props;\n\n  return (\n    <TextField\n      type=\"number\"\n      label={label || 'X'}\n      value={hookValue}\n      inputProps={{\n        step: step || 1.0,\n      }}\n      onChange={(event) => hookSetter(event.target.value)}\n    />\n  );\n}\n\nexport default XInput;\n","export const genCurvePlotData = (x, y) => {\n  const plotData = {\n    x,\n    y,\n    type: 'scatter',\n    mode: 'lines',\n    hovertemplate: '(%{x:.2f}, %{y:.2f})<extra></extra>',\n    line: { color: '#f77f00' },\n  };\n\n  return plotData;\n};\n\nexport const genShadedRegionPlotData = (x, y, x1, x2) => {\n  let minX = Number(x1);\n  let maxX = Number(x2);\n\n  if (minX > maxX) {\n    [minX, maxX] = [maxX, minX];\n  }\n\n  const rx = [];\n  const ry = [];\n\n  for (let i = 0; i < x.length - 1; i += 1) {\n    if (x[i] >= minX && x[i] <= maxX) {\n      rx.push(x[i]);\n      ry.push(y[i]);\n    }\n  }\n\n  return {\n    x: rx,\n    y: ry,\n    type: 'scatter',\n    mode: 'lines',\n    fill: 'tozeroy',\n    hoverinfo: 'skip',\n    line: { color: '#f77f00' },\n  };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nimport MeanInput from '../inputs/numInputs/MeanNumInput';\nimport SDInput from '../inputs/numInputs/SDNumInput';\nimport XInput from '../inputs/numInputs/XNumInput';\nimport CurveAreaRadioButtons from '../inputs/CurveAreaRadioButtons';\n\nfunction PFromZForm(props) {\n  const { hookValues, hookSetters } = props;\n\n  const {\n    mean, sd, x, curveRegion,\n  } = hookValues;\n\n  const {\n    setMean, setSD, setX, setCurveRegion,\n  } = hookSetters;\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: 'auto',\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n\n        <Grid item align=\"center\" xs={12}>\n          <XInput label=\"z\" hookValue={x} hookSetter={setX} />\n          <MeanInput hookValue={mean} hookSetter={setMean} />\n          <SDInput hookValue={sd} hookSetter={setSD} />\n        </Grid>\n\n        <Grid item align=\"center\" xs={12}>\n          <CurveAreaRadioButtons\n            hookValue={curveRegion}\n            hookSetter={setCurveRegion}\n            defaultValue={curveRegion}\n          />\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n}\n\nexport default PFromZForm;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nimport { MAX_Z } from '../../../statistics/zTable/constants';\nimport genNormalPts from '../../../statistics/zTable/genNormalCurve';\nimport { genCurvePlotData, genShadedRegionPlotData } from '../plotlyUtils';\n\nconst defineShadedRegionEndPoints = (mean, sd, x, selectedRegion) => {\n  const shadedRegionEndPoints = {\n    r1x1: null, r1x2: null, r2x1: null, r2x2: null, z: null,\n  };\n\n  const z = (x - mean) / sd;\n\n  if (Math.abs(z) >= MAX_Z) {\n    shadedRegionEndPoints.z = Infinity;\n    shadedRegionEndPoints.r1x1 = mean - MAX_Z * sd;\n    shadedRegionEndPoints.r1x2 = mean + MAX_Z * sd;\n  } else if (selectedRegion === 'below') {\n    shadedRegionEndPoints.z = z;\n\n    shadedRegionEndPoints.r1x1 = mean - MAX_Z * sd;\n    shadedRegionEndPoints.r1x2 = mean + z * sd;\n  } else if (selectedRegion === 'above') {\n    shadedRegionEndPoints.z = z;\n\n    shadedRegionEndPoints.r1x1 = mean + z * sd;\n    shadedRegionEndPoints.r1x2 = mean + MAX_Z * sd;\n  } else if (selectedRegion === 'between') {\n    shadedRegionEndPoints.z = z;\n\n    shadedRegionEndPoints.r1x1 = mean - z * sd;\n    shadedRegionEndPoints.r1x2 = mean + z * sd;\n  } else if (selectedRegion === 'outside') {\n    shadedRegionEndPoints.z = z;\n\n    shadedRegionEndPoints.r1x1 = mean - MAX_Z * sd;\n    shadedRegionEndPoints.r1x2 = mean - z * sd;\n\n    shadedRegionEndPoints.r2x1 = mean + z * sd;\n    shadedRegionEndPoints.r2x2 = mean + MAX_Z * sd;\n  }\n\n  return shadedRegionEndPoints;\n};\n\nfunction PFromZPlot(props) {\n  const { hookValues } = props;\n  const {\n    mean,\n    sd,\n    x: userX,\n    curveRegion,\n  } = hookValues;\n\n  const {\n    x, y,\n  } = genNormalPts(Number(mean), Number(sd));\n\n  const {\n    r1x1, r1x2, r2x1, r2x2,\n  } = defineShadedRegionEndPoints(Number(mean), Number(sd), Number(userX), curveRegion);\n\n  // Just data for curve's line, *no fill*\n  const plotData = [genCurvePlotData(x, y)];\n\n  // Check if shaded regions are requested\n  const plotRegion1 = r1x1 !== null && r1x2 !== null;\n  const plotRegion2 = r2x1 !== null && r2x2 !== null;\n\n  if (plotRegion1) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r1x1, r1x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (plotRegion2) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r2x1, r2x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (!plotRegion1 && !plotRegion2) {\n    plotData[0].fill = 'tozeroy';\n  }\n\n  return (\n    <div>\n      <hr />\n      <Plot\n        data={plotData}\n        layout={{\n          xaxis: { zeroline: false },\n          showlegend: false,\n          margin: {\n            l: 50,\n            r: 40,\n            b: 50,\n            t: 40,\n            pad: 4,\n          },\n        }}\n        config={{ displayModeBar: false }}\n      />\n    </div>\n  );\n}\n\nexport default PFromZPlot;\n","import React, { useState } from 'react';\nimport PFromZForm from '../../components/forms/PFromZForm';\nimport PFromZPlot from '../../components/plots/z/PFromZPlot';\n\nfunction PFromZ() {\n  const [x, setX] = useState(1.96);\n  const [mean, setMean] = useState(0);\n  const [sd, setSD] = useState(1);\n\n  const [curveRegion, setCurveRegion] = useState('outside');\n\n  const hookValues = {\n    x, mean, sd, curveRegion,\n  };\n\n  const hookSetters = {\n    setX, setMean, setSD, setCurveRegion,\n  };\n\n  return (\n    <div className=\"page\">\n      <PFromZForm hookValues={hookValues} hookSetters={hookSetters} />\n      <PFromZPlot hookValues={hookValues} />\n    </div>\n  );\n}\n\nexport default PFromZ;\n","export const mapRange = (x, inMin, inMax, outMin, outMax) => {\n  let newX = x;\n\n  newX -= inMin;\n\n  newX *= (outMax - outMin);\n  newX /= (inMax - inMin);\n  newX += outMin;\n\n  return newX;\n};\n\nexport const gamma = (x) => {\n  // Gamma function implemented using the Lanczos approximation.\n  // This is a good general-purpose approximation with a few extra decimal places of precision.\n\n  const p = [\n    0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n    771.32342877765313, -176.61502916214059, 12.507343278686905,\n    -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7,\n  ];\n\n  if (x < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  x -= 1;\n  let a = p[0];\n  const t = x + 7.5;\n  for (let i = 1; i < p.length; i += 1) {\n    a += p[i] / (x + i);\n  }\n  // eslint-disable-next-line no-bitwise\n  return Math.sqrt(2 * Math.PI) * t ** (x + 0.5) * Math.exp(-t) * a;\n};\n\nexport const logGamma = (Z) => {\n  // eslint-disable-next-line max-len\n  const S = 1 + 76.18009173 / Z - 86.50532033 / (Z + 1) + 24.01409822 / (Z + 2) - 1.231739516 / (Z + 3) + 0.00120858003 / (Z + 4) - 0.00000536382 / (Z + 5);\n  const LG = (Z - 0.5) * Math.log(Z + 4.5) - (Z + 4.5) + Math.log(S * 2.50662827465);\n\n  return LG;\n};\n\nexport const incompleteBeta = (X, A, B) => {\n  // Compute the incomplete beta function I_x(a, b).\n  let A0 = 0;\n  let B0 = 1;\n  let A1 = 1;\n  let B1 = 1;\n  let M9 = 0;\n  let A2 = 0;\n  let C9;\n  while (Math.abs((A1 - A2) / A1) > 0.00001) {\n    A2 = A1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = -(A + M9) * (A + B + M9) * X / (A + 2 * M9) / (A + 2 * M9 + 1);\n    A0 = A1 + C9 * A0;\n    B0 = B1 + C9 * B0;\n    M9 += 1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = M9 * (B - M9) * X / (A + 2 * M9 - 1) / (A + 2 * M9);\n    A1 = A0 + C9 * A1;\n    B1 = B0 + C9 * B1;\n    A0 /= B1;\n    B0 /= B1;\n    A1 /= B1;\n    B1 = 1;\n  }\n  return A1 / A;\n};\n","/* eslint-disable import/prefer-default-export */\nexport const MIN_Z = 0.0001;\nexport const MAX_Z = 5;\n","const zPDF = (x, mean, sd) => Math.exp((-0.5) * ((x - mean) / sd) ** 2);\n\nexport default zPDF;\n","import { mapRange } from '../mathUtils';\nimport { MAX_Z } from './constants';\nimport zPDF from './zPDF';\n\nconst genNormalCurve = (mean, sd, nSteps = 512) => {\n  const minX = mean - MAX_Z * sd;\n  const maxX = mean + MAX_Z * sd;\n\n  const steps = Array.from({ length: nSteps }).map((_, i) => i);\n  const x = steps.map((n) => mapRange(n, 0, nSteps - 1, minX, maxX));\n  const y = x.map((xi) => zPDF(xi, mean, sd));\n\n  return {\n    x, y, minX, maxX, minY: Math.min(...y), maxY: Math.min(...y),\n  };\n};\n\nexport default genNormalCurve;\n"],"names":["props","hookSetter","defaultValue","id","row","onChange","event","target","value","name","control","label","hookValue","step","type","inputProps","min","v","genCurvePlotData","x","y","mode","hovertemplate","line","color","genShadedRegionPlotData","x1","x2","minX","Number","maxX","rx","ry","i","length","push","fill","hoverinfo","hookValues","hookSetters","mean","sd","curveRegion","setMean","setSD","setX","setCurveRegion","Box","component","sx","width","m","noValidate","autoComplete","Grid","container","alignItems","justifyContent","item","align","xs","CurveAreaRadioButtons","userX","genNormalPts","selectedRegion","shadedRegionEndPoints","r1x1","r1x2","r2x1","r2x2","z","Math","abs","MAX_Z","Infinity","defineShadedRegionEndPoints","plotData","plotRegion1","plotRegion2","shadedRegionPlotData","data","layout","xaxis","zeroline","showlegend","margin","l","r","b","t","pad","config","displayModeBar","useState","className","mapRange","inMin","inMax","outMin","outMax","newX","gamma","p","PI","sin","a","sqrt","exp","logGamma","Z","S","log","incompleteBeta","X","A","B","C9","A0","B0","A1","B1","M9","A2","MIN_Z","nSteps","steps","Array","from","map","_","n","xi","zPDF","minY","maxY"],"sourceRoot":""}