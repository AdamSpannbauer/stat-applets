{"version":3,"file":"static/js/272.bf083d08.chunk.js","mappings":"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","sources":["components/inputs/CurveAreaRadioButtons.jsx","components/inputs/numInputs/AreaNumInput.jsx","components/inputs/numInputs/DfNumInput.jsx","components/plots/plotlyUtils.js","components/forms/TFromPForm.jsx","statistics/tTable/tCDF/tCDF.js","statistics/tTable/tInvCDF/tInvCDF.js","statistics/tTable/tInvCDF/tFromArea.js","components/plots/t/TFromPPlotTitle.jsx","components/plots/t/TFromPPlot.jsx","pages/tTable/TFromP.jsx","statistics/mathUtils.js","statistics/tTable/constants.js","statistics/tTable/genTCurve.js","statistics/tTable/tPDF.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport * as React from 'react';\n\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nfunction CurveAreaRadioButtons(props) {\n  const { hookSetter, defaultValue } = props;\n\n  const onChange = (event) => {\n    hookSetter(event.target.value);\n  };\n\n  return (\n    <FormControl>\n      <FormLabel id=\"curve-region-radio-buttons-group\">Region</FormLabel>\n      <RadioGroup\n        row\n        onChange={onChange}\n        aria-labelledby=\"curve-region-radio-buttons-group-label\"\n        defaultValue={defaultValue || 'outside'}\n        name=\"curve-region-radio-buttons-group\"\n      >\n        <FormControlLabel value=\"below\" control={<Radio />} label=\"Below\" />\n        <FormControlLabel value=\"above\" control={<Radio />} label=\"Above\" />\n        <FormControlLabel value=\"between\" control={<Radio />} label=\"Between\" />\n        <FormControlLabel value=\"outside\" control={<Radio />} label=\"Outside\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport default CurveAreaRadioButtons;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction AreaInput(props) {\n  const { hookValue, hookSetter, step } = props;\n\n  const onChange = (event) => {\n    let v = event.target.value;\n    if (v < 0) v = 0;\n    if (v > 1) v = 1;\n    hookSetter(v);\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Area\"\n      value={hookValue}\n      inputProps={{\n        min: 0,\n        max: 1,\n        step: step || 0.01,\n      }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default AreaInput;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction DfInput(props) {\n  const { hookValue, hookSetter, step } = props;\n\n  const onChange = (event) => {\n    let v = event.target.value;\n    if (v < 1) v = 1;\n    hookSetter(v);\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Degrees of Freedom\"\n      value={hookValue}\n      inputProps={{\n        step: step || 1.0,\n      }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default DfInput;\n","export const genCurvePlotData = (x, y) => {\n  const plotData = {\n    x,\n    y,\n    type: 'scatter',\n    mode: 'lines',\n    hovertemplate: '(%{x:.2f}, %{y:.2f})<extra></extra>',\n    line: { color: '#f77f00' },\n  };\n\n  return plotData;\n};\n\nexport const genShadedRegionPlotData = (x, y, x1, x2) => {\n  let minX = Number(x1);\n  let maxX = Number(x2);\n\n  if (minX > maxX) {\n    [minX, maxX] = [maxX, minX];\n  }\n\n  const rx = [];\n  const ry = [];\n\n  for (let i = 0; i < x.length - 1; i += 1) {\n    if (x[i] >= minX && x[i] <= maxX) {\n      rx.push(x[i]);\n      ry.push(y[i]);\n    }\n  }\n\n  return {\n    x: rx,\n    y: ry,\n    type: 'scatter',\n    mode: 'lines',\n    fill: 'tozeroy',\n    hoverinfo: 'skip',\n    line: { color: '#f77f00' },\n  };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nimport CurveAreaRadioButtons from '../inputs/CurveAreaRadioButtons';\nimport DfInput from '../inputs/numInputs/DfNumInput';\nimport AreaInput from '../inputs/numInputs/AreaNumInput';\n\nfunction TFromPForm(props) {\n  const { hookValues, hookSetters } = props;\n\n  const {\n    area, df, curveRegion,\n  } = hookValues;\n\n  const {\n    setArea, setDF, setCurveRegion,\n  } = hookSetters;\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: 'auto',\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n\n        <Grid item align=\"center\" xs={12}>\n          <AreaInput hookValue={area} hookSetter={setArea} />\n          <DfInput hookValue={df} hookSetter={setDF} />\n        </Grid>\n\n        <Grid item align=\"center\" xs={12}>\n          <CurveAreaRadioButtons\n            hookValue={curveRegion}\n            hookSetter={setCurveRegion}\n            defaultValue={curveRegion}\n          />\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n}\n\nexport default TFromPForm;\n","import { logGamma, incompleteBeta } from '../../mathUtils';\n\nfunction tCDF(t, df) {\n  // Compute the CDF of the Student's t distribution with `df` degrees of freedom\n  // at value `t`.\n\n  // Special case: df = 1 is the Cauchy distribution\n  if (df === 1) {\n    return 1 / 2 + Math.atan(t) / Math.PI;\n  }\n\n  // General case\n  if (df <= 0) {\n    return NaN;\n  }\n\n  const A = df / 2;\n  const S = A + 0.5;\n  const Z = df / (df + t * t);\n\n  let betacdf;\n  let tcdf;\n\n  // eslint-disable-next-line max-len\n  const BT = Math.exp(logGamma(S) - logGamma(0.5) - logGamma(A) + A * Math.log(Z) + 0.5 * Math.log(1 - Z));\n  if (Z < (A + 1) / (S + 2)) {\n    betacdf = BT * incompleteBeta(Z, A, 0.5);\n  } else {\n    betacdf = 1 - BT * incompleteBeta(1 - Z, 0.5, A);\n  }\n  if (t < 0) {\n    tcdf = betacdf / 2;\n  } else {\n    tcdf = 1 - betacdf / 2;\n  }\n\n  tcdf = Math.round(tcdf * 100000) / 100000;\n\n  return tcdf;\n}\n\nexport default tCDF;\n","import tCDF from '../tCDF/tCDF';\nimport tPDF from '../tPDF';\n\nconst tInvCDF = (p, df) => {\n  const EPS = 1e-12;\n  const MAX_ITERATIONS = 1000;\n\n  let t;\n  let tNew;\n  let cdf;\n  let err;\n\n  // Initialize t using bisection\n  let tLow = -100;\n  let tHigh = 100;\n  while (tHigh - tLow > EPS) {\n    t = (tLow + tHigh) / 2;\n    cdf = tCDF(t, df);\n    if (cdf > p) {\n      tHigh = t;\n    } else {\n      tLow = t;\n    }\n  }\n\n  // Refine t using Newton-Raphson iterations\n  for (let i = 0; i < MAX_ITERATIONS; i += 1) {\n    tNew = t - (cdf - p) / tPDF(t, df);\n    err = Math.abs(tNew - t);\n    t = tNew;\n    cdf = tCDF(t, df);\n    if (err < EPS) {\n      break;\n    }\n  }\n\n  return t;\n};\n\nexport default tInvCDF;\n","import { MAX_T, MIN_T } from '../constants';\nimport tInvCDF from './tInvCDF';\n\nexport const tFromAreaBelow = (area, df) => {\n  if (area >= 1) return MAX_T;\n\n  const z = tInvCDF(area, df);\n  return z;\n};\n\nexport const tFromAreaAbove = (area, df) => {\n  if (area >= 1) return -MAX_T;\n\n  const z = tInvCDF(1 - area, df);\n  return z;\n};\n\nexport const tFromAreaBetween = (area, df) => {\n  if (area >= 1) return [-MAX_T, MAX_T];\n\n  const halfA = (1 - area) / 2;\n  const z = tFromAreaBelow(halfA, df);\n  return Math.abs(z);\n};\n\nexport const tFromAreaOutside = (area, df) => {\n  if (area >= 1) return [MIN_T, -MIN_T];\n\n  const halfA = area / 2;\n  const z = tFromAreaBelow(halfA, df);\n  return Math.abs(z);\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction titleStr(df, area, curveRegion, t) {\n  let scaledZStr = +t.toFixed(3);\n  const areaPercentStr = +(100 * area).toFixed(2);\n\n  let scaledZ2Str = null;\n  if (['outside', 'between'].includes(curveRegion)) {\n    // eslint-disable-next-line no-param-reassign\n    t = Math.abs(t);\n\n    scaledZStr = +t.toFixed(3);\n\n    scaledZ2Str = +t.toFixed(3);\n  }\n\n  let res = '';\n  if (curveRegion === 'below') {\n    if (area === 0) {\n      scaledZStr = `-${Infinity}`;\n    }\n    res = `${areaPercentStr}% of the data is below ${scaledZStr}`;\n  } else if (curveRegion === 'above') {\n    if (t === Infinity) {\n      scaledZStr = `-${scaledZStr}`;\n    } else if (area === 0) {\n      scaledZStr = `${Infinity}`;\n    }\n    res = `${areaPercentStr}% of the data is above ${scaledZStr}`;\n  } else if (curveRegion === 'between') {\n    res = `${areaPercentStr}% of the data is between ${scaledZStr} & ${scaledZ2Str}`;\n  } else if (curveRegion === 'outside') {\n    if (t === Infinity) {\n      scaledZStr = '0';\n    } else if (area === 0) {\n      scaledZStr = `${Infinity}`;\n    }\n    res = `${areaPercentStr}% of the data is outside ${scaledZStr} & ${scaledZ2Str}`;\n  }\n\n  return res;\n}\n\nfunction TFromPPlotTitle(props) {\n  const {\n    df, area, curveRegion, t,\n  } = props;\n\n  const title = titleStr(Number(df), Number(area), curveRegion, Number(t));\n  return <h1 className=\"plot-title\">{title}</h1>;\n}\n\nexport default TFromPPlotTitle;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nimport { MAX_T } from '../../../statistics/tTable/constants';\n\nimport genTCurve from '../../../statistics/tTable/genTCurve';\nimport {\n  tFromAreaAbove, tFromAreaBelow, tFromAreaBetween, tFromAreaOutside,\n} from '../../../statistics/tTable/tInvCDF/tFromArea';\n\nimport { genCurvePlotData, genShadedRegionPlotData } from '../plotlyUtils';\nimport TFromPPlotTitle from './TFromPPlotTitle';\n\nconst defineShadedRegionEndPoints = (df, area, selectedRegion) => {\n  const shadedRegionEndPoints = {\n    r1x1: null, r1x2: null, r2x1: null, r2x2: null, z: null,\n  };\n\n  let t;\n\n  if (area >= 1) {\n    shadedRegionEndPoints.z = Infinity;\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = MAX_T;\n  } else if (selectedRegion === 'below') {\n    t = tFromAreaBelow(area, df);\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = t;\n  } else if (selectedRegion === 'above') {\n    t = tFromAreaAbove(area, df);\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = t;\n    shadedRegionEndPoints.r1x2 = MAX_T;\n  } else if (selectedRegion === 'between') {\n    t = tFromAreaBetween(area, df);\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -t;\n    shadedRegionEndPoints.r1x2 = t;\n  } else if (selectedRegion === 'outside') {\n    t = tFromAreaOutside(area, df);\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = -t;\n\n    shadedRegionEndPoints.r2x1 = t;\n    shadedRegionEndPoints.r2x2 = MAX_T;\n  }\n\n  return shadedRegionEndPoints;\n};\n\nfunction TFromPPlot(props) {\n  const { hookValues } = props;\n  const {\n    df,\n    area,\n    curveRegion,\n  } = hookValues;\n\n  const {\n    x, y,\n  } = genTCurve(Number(df));\n\n  const {\n    r1x1, r1x2, r2x1, r2x2, t,\n  } = defineShadedRegionEndPoints(Number(df), Number(area), curveRegion);\n\n  // Just data for curve's line, *no fill*\n  const plotData = [genCurvePlotData(x, y)];\n\n  // Check if shaded regions are requested\n  const plotRegion1 = r1x1 !== null && r1x2 !== null;\n  const plotRegion2 = r2x1 !== null && r2x2 !== null;\n\n  if (plotRegion1) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r1x1, r1x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (plotRegion2) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r2x1, r2x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (!plotRegion1 && !plotRegion2) {\n    plotData[0].fill = 'tozeroy';\n  }\n\n  return (\n    <div>\n      <hr />\n      <TFromPPlotTitle\n        df={df}\n        area={area}\n        curveRegion={curveRegion}\n        t={t}\n      />\n      <Plot\n        data={plotData}\n        layout={{\n          xaxis: { zeroline: false },\n          showlegend: false,\n          margin: {\n            l: 50,\n            r: 40,\n            b: 50,\n            t: 40,\n            pad: 4,\n          },\n        }}\n        config={{ displayModeBar: false }}\n      />\n    </div>\n  );\n}\n\nexport default TFromPPlot;\n","import React, { useState } from 'react';\nimport TFromPForm from '../../components/forms/TFromPForm';\nimport TFromPPlot from '../../components/plots/t/TFromPPlot';\n\nfunction TFromP() {\n  const [area, setArea] = useState(0.05);\n  const [df, setDF] = useState(2);\n\n  const [curveRegion, setCurveRegion] = useState('outside');\n\n  const hookValues = {\n    area, df, curveRegion,\n  };\n\n  const hookSetters = {\n    setArea, setDF, setCurveRegion,\n  };\n\n  return (\n    <div className=\"page\">\n      <TFromPForm hookValues={hookValues} hookSetters={hookSetters} />\n      <TFromPPlot hookValues={hookValues} />\n    </div>\n  );\n}\n\nexport default TFromP;\n","export const mapRange = (x, inMin, inMax, outMin, outMax) => {\n  let newX = x;\n\n  newX -= inMin;\n\n  newX *= (outMax - outMin);\n  newX /= (inMax - inMin);\n  newX += outMin;\n\n  return newX;\n};\n\nexport const gamma = (x) => {\n  // Gamma function implemented using the Lanczos approximation.\n  // This is a good general-purpose approximation with a few extra decimal places of precision.\n\n  const p = [\n    0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n    771.32342877765313, -176.61502916214059, 12.507343278686905,\n    -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7,\n  ];\n\n  if (x < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  x -= 1;\n  let a = p[0];\n  const t = x + 7.5;\n  for (let i = 1; i < p.length; i += 1) {\n    a += p[i] / (x + i);\n  }\n  // eslint-disable-next-line no-bitwise\n  return Math.sqrt(2 * Math.PI) * t ** (x + 0.5) * Math.exp(-t) * a;\n};\n\nexport const logGamma = (Z) => {\n  // eslint-disable-next-line max-len\n  const S = 1 + 76.18009173 / Z - 86.50532033 / (Z + 1) + 24.01409822 / (Z + 2) - 1.231739516 / (Z + 3) + 0.00120858003 / (Z + 4) - 0.00000536382 / (Z + 5);\n  const LG = (Z - 0.5) * Math.log(Z + 4.5) - (Z + 4.5) + Math.log(S * 2.50662827465);\n\n  return LG;\n};\n\nexport const incompleteBeta = (X, A, B) => {\n  // Compute the incomplete beta function I_x(a, b).\n  let A0 = 0;\n  let B0 = 1;\n  let A1 = 1;\n  let B1 = 1;\n  let M9 = 0;\n  let A2 = 0;\n  let C9;\n  while (Math.abs((A1 - A2) / A1) > 0.00001) {\n    A2 = A1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = -(A + M9) * (A + B + M9) * X / (A + 2 * M9) / (A + 2 * M9 + 1);\n    A0 = A1 + C9 * A0;\n    B0 = B1 + C9 * B0;\n    M9 += 1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = M9 * (B - M9) * X / (A + 2 * M9 - 1) / (A + 2 * M9);\n    A1 = A0 + C9 * A1;\n    B1 = B0 + C9 * B1;\n    A0 /= B1;\n    B0 /= B1;\n    A1 /= B1;\n    B1 = 1;\n  }\n  return A1 / A;\n};\n","/* eslint-disable import/prefer-default-export */\nexport const MIN_T = 0.0001;\nexport const MAX_T = 5;\n","import { mapRange } from '../mathUtils';\nimport { MAX_T } from './constants';\nimport tPDF from './tPDF';\n\nconst genTCurve = (df, nSteps = 512) => {\n  const minX = -MAX_T;\n  const maxX = MAX_T;\n\n  const steps = Array.from({ length: nSteps }).map((_, i) => i);\n  const x = steps.map((n) => mapRange(n, 0, nSteps - 1, minX, maxX));\n  const y = x.map((xi) => tPDF(xi, df));\n\n  return {\n    x, y, minX, maxX, minY: Math.min(...y), maxY: Math.min(...y),\n  };\n};\n\nexport default genTCurve;\n","import { gamma } from '../mathUtils';\n\nfunction tPDF(t, df) {\n  // Compute the PDF of the Student's t distribution with `df` degrees of freedom\n  // at value `t`.\n\n  // Special case: df = 1 is the Cauchy distribution\n  if (df === 1) {\n    return 1 / (Math.PI * (1 + t * t));\n  }\n\n  // General case\n  const n = df;\n  const gammaTerm = gamma((n + 1) / 2) / (Math.sqrt(n * Math.PI) * gamma(n / 2));\n  // eslint-disable-next-line no-bitwise\n  return gammaTerm * (1 + (t * t) / n) ** (-(n + 1) / 2);\n}\n\nexport default tPDF;\n"],"names":["props","hookSetter","defaultValue","id","row","onChange","event","target","value","name","control","label","hookValue","step","type","inputProps","min","max","v","genCurvePlotData","x","y","mode","hovertemplate","line","color","genShadedRegionPlotData","x1","x2","minX","Number","maxX","rx","ry","i","length","push","fill","hoverinfo","hookValues","hookSetters","area","df","curveRegion","setArea","setDF","setCurveRegion","Box","component","sx","width","m","noValidate","autoComplete","Grid","container","alignItems","justifyContent","item","align","xs","CurveAreaRadioButtons","t","Math","atan","PI","NaN","betacdf","tcdf","A","S","Z","BT","exp","logGamma","log","incompleteBeta","round","p","tNew","cdf","err","tLow","tHigh","tCDF","tPDF","abs","tFromAreaBelow","MAX_T","tInvCDF","title","scaledZStr","toFixed","areaPercentStr","scaledZ2Str","includes","res","Infinity","titleStr","className","defineShadedRegionEndPoints","selectedRegion","shadedRegionEndPoints","r1x1","r1x2","r2x1","r2x2","z","tFromAreaAbove","tFromAreaBetween","MIN_T","tFromAreaOutside","genTCurve","plotData","plotRegion1","plotRegion2","shadedRegionPlotData","data","layout","xaxis","zeroline","showlegend","margin","l","r","b","pad","config","displayModeBar","useState","mapRange","inMin","inMax","outMin","outMax","newX","gamma","sin","a","sqrt","X","B","C9","A0","B0","A1","B1","M9","A2","nSteps","steps","Array","from","map","_","n","xi","minY","maxY"],"sourceRoot":""}