{"version":3,"file":"static/js/531.720dee56.chunk.js","mappings":"qLAoCA,IA1BA,SAA+BA,GAC7B,IAAQC,EAA6BD,EAA7BC,WAAYC,EAAiBF,EAAjBE,aAMpB,OACE,UAAC,IAAW,YACV,SAAC,IAAS,CAACC,GAAG,mCAAkC,qBAChD,UAAC,IAAU,CACTC,KAAG,EACHC,SATW,SAACC,GAChBL,EAAWK,EAAMC,OAAOC,MAC1B,EAQM,kBAAgB,yCAChBN,aAAcA,GAAgB,UAC9BO,KAAK,mCAAkC,WAEvC,SAAC,IAAgB,CAACD,MAAM,QAAQE,SAAS,SAAC,IAAK,IAAKC,MAAM,WAC1D,SAAC,IAAgB,CAACH,MAAM,QAAQE,SAAS,SAAC,IAAK,IAAKC,MAAM,WAC1D,SAAC,IAAgB,CAACH,MAAM,UAAUE,SAAS,SAAC,IAAK,IAAKC,MAAM,aAC5D,SAAC,IAAgB,CAACH,MAAM,UAAUE,SAAS,SAAC,IAAK,IAAKC,MAAM,iBAIpE,C,sDCRA,IAtBA,SAAiBX,GACf,IAAQY,EAAgCZ,EAAhCY,UAAWX,EAAqBD,EAArBC,WAAYY,EAASb,EAATa,KAQ/B,OACE,SAAC,IAAS,CACRC,KAAK,SACLH,MAAM,qBACNH,MAAOI,EACPG,WAAY,CACVF,KAAMA,GAAQ,GAEhBR,SAda,SAACC,GAChB,IAAIU,EAAIV,EAAMC,OAAOC,MACjBQ,EAAI,IAAGA,EAAI,GACff,EAAWe,EACb,GAaF,C,qDCFA,IAlBA,SAAgBhB,GACd,IACEY,EACEZ,EADFY,UAAWX,EACTD,EADSC,WAAYY,EACrBb,EADqBa,KAAMF,EAC3BX,EAD2BW,MAG/B,OACE,SAAC,IAAS,CACRG,KAAK,SACLH,MAAOA,GAAS,IAChBH,MAAOI,EACPG,WAAY,CACVF,KAAMA,GAAQ,GAEhBR,SAAU,SAACC,GAAK,OAAKL,EAAWK,EAAMC,OAAOC,MAAM,GAGzD,C,8ECpBO,IAAMS,EAAmB,SAACC,EAAGC,GAUlC,MATiB,CACfD,EAAAA,EACAC,EAAAA,EACAL,KAAM,UACNM,KAAM,QACNC,cAAe,sCACfC,KAAM,CAAEC,MAAO,WAInB,EAEaC,EAA0B,SAACN,EAAGC,EAAGM,EAAIC,GAChD,IAAIC,EAAOC,OAAOH,GACdI,EAAOD,OAAOF,GAElB,GAAIC,EAAOE,EAAM,CAAC,IAAD,EACA,CAACA,EAAMF,GAArBA,EAAI,KAAEE,EAAI,IACb,CAKA,IAHA,IAAMC,EAAK,GACLC,EAAK,GAEFC,EAAI,EAAGA,EAAId,EAAEe,OAAS,EAAGD,GAAK,EACjCd,EAAEc,IAAML,GAAQT,EAAEc,IAAMH,IAC1BC,EAAGI,KAAKhB,EAAEc,IACVD,EAAGG,KAAKf,EAAEa,KAId,MAAO,CACLd,EAAGY,EACHX,EAAGY,EACHjB,KAAM,UACNM,KAAM,QACNe,KAAM,UACNC,UAAW,OACXd,KAAM,CAAEC,MAAO,WAEnB,C,qJCeA,MA7CA,SAAoBvB,GAClB,IAAQqC,EAA4BrC,EAA5BqC,WAAYC,EAAgBtC,EAAhBsC,YAGlBC,EACEF,EADFE,EAAGC,EACDH,EADCG,GAAIC,EACLJ,EADKI,YAIPC,EACEJ,EADFI,KAAMC,EACJL,EADIK,MAAOC,EACXN,EADWM,eAGf,OACE,SAACC,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,MAAO,OACP,uBAAwB,CAAEC,EAAG,EAAGD,MAAO,SAEzCE,YAAU,EACVC,aAAa,MAAK,UAElB,UAACC,EAAA,GAAI,CACHC,WAAS,EACTC,WAAW,SACXC,eAAe,SAAQ,WAGvB,UAACH,EAAA,GAAI,CAACI,MAAI,EAACC,MAAM,SAASC,GAAI,GAAG,WAC/B,SAAC,IAAM,CAAC/C,MAAM,IAAIC,UAAW2B,EAAGtC,WAAYyC,EAAM7B,KAAM,OACxD,SAAC,IAAO,CAACD,UAAW4B,EAAIvC,WAAY0C,QAGtC,SAACS,EAAA,GAAI,CAACI,MAAI,EAACC,MAAM,SAASC,GAAI,GAAG,UAC/B,SAACC,EAAA,EAAqB,CACpB/C,UAAW6B,EACXxC,WAAY2C,EACZ1C,aAAcuC,UAO1B,E,wCCmDA,MA3DA,SAAoBzC,GAClB,IAAQqC,EAAerC,EAAfqC,WAENG,EAGEH,EAHFG,GACAoB,EAEEvB,EAFFuB,KACAnB,EACEJ,EADFI,YAGF,GAAiBoB,EAAAA,EAAAA,GAAUjC,OAAOY,IAA1BtB,EAAC,EAADA,EAAGC,EAAC,EAADA,EAEX,EA/CkC,SAACoB,EAAGuB,GACtC,IAAMC,EAAwB,CAC5BC,KAAM,KAAMC,KAAM,KAAMC,KAAM,KAAMC,KAAM,KAAMC,EAAG,MAgCrD,OA7BIC,KAAKC,IAAI/B,IAAMgC,EAAAA,GACjBR,EAAsBK,EAAII,IAC1BT,EAAsBC,MAAQO,EAAAA,EAC9BR,EAAsBE,KAAOM,EAAAA,GACD,UAAnBT,GACTC,EAAsBxB,EAAIA,EAE1BwB,EAAsBC,MAAQO,EAAAA,EAC9BR,EAAsBE,KAAO1B,GACD,UAAnBuB,GACTC,EAAsBxB,EAAIA,EAE1BwB,EAAsBC,KAAOzB,EAC7BwB,EAAsBE,KAAOM,EAAAA,GACD,YAAnBT,GACTC,EAAsBxB,EAAIA,EAE1BwB,EAAsBC,MAAQK,KAAKC,IAAI/B,GACvCwB,EAAsBE,KAAOI,KAAKC,IAAI/B,IACV,YAAnBuB,IACTC,EAAsBxB,EAAIA,EAE1BwB,EAAsBC,MAAQO,EAAAA,EAC9BR,EAAsBE,MAAQI,KAAKC,IAAI/B,GAEvCwB,EAAsBG,KAAOG,KAAKC,IAAI/B,GACtCwB,EAAsBI,KAAOI,EAAAA,GAGxBR,CACT,CAcMU,CAA4B7C,OAAOgC,GAAOnB,GAD5CuB,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAIdO,EAAW,EAACzD,EAAAA,EAAAA,GAAiBC,EAAGC,IAGhCwD,EAAuB,OAATX,GAA0B,OAATC,EAC/BW,EAAuB,OAATV,GAA0B,OAATC,EAErC,GAAIQ,EAAa,CACf,IAAME,GAAuBrD,EAAAA,EAAAA,GAAwBN,EAAGC,EAAG6C,EAAMC,GAEjES,EAASxC,KAAK2C,EAChB,CAEA,GAAID,EAAa,CACf,IAAMC,GAAuBrD,EAAAA,EAAAA,GAAwBN,EAAGC,EAAG+C,EAAMC,GAEjEO,EAASxC,KAAK2C,EAChB,CAMA,OAJKF,GAAgBC,IACnBF,EAAS,GAAGvC,KAAO,YAInB,4BACE,mBACA,SAAC,IAAI,CACH2C,KAAMJ,EACNK,OAAQ,CACNC,MAAO,CAAEC,UAAU,GACnBC,YAAY,EACZC,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH/C,EAAG,GACHgD,IAAK,IAGTC,OAAQ,CAAEC,gBAAgB,OAIlC,EC5EA,MAtBA,WACE,OAAkBC,EAAAA,EAAAA,UAAS,MAAK,eAAzBnD,EAAC,KAAEG,EAAI,KACd,GAAoBgD,EAAAA,EAAAA,UAAS,IAAG,eAAzBlD,EAAE,KAAEG,EAAK,KAEhB,GAAsC+C,EAAAA,EAAAA,UAAS,WAAU,eAEnDrD,EAAa,CACjBE,EAAAA,EAAGC,GAAAA,EAAIC,YAHS,MAMZH,EAAc,CAClBI,KAAAA,EAAMC,MAAAA,EAAOC,eAPmB,MAUlC,OACE,iBAAK+C,UAAU,OAAM,WACnB,SAAC,EAAU,CAACtD,WAAYA,EAAYC,YAAaA,KACjD,SAAC,EAAU,CAACD,WAAYA,MAG9B,C,gICxBO,IAAMuD,EAAW,SAAC1E,EAAG2E,EAAOC,EAAOC,EAAQC,GAChD,IAAIC,EAAO/E,EAQX,OANA+E,GAAQJ,EAERI,GAASD,EAASD,EAClBE,GAASH,EAAQD,EACjBI,GAAQF,CAGV,EAEaG,EAAQ,SAARA,EAAShF,GAIpB,IAAMiF,EAAI,CACR,kBAAqB,mBAAoB,mBACzC,mBAAqB,kBAAoB,oBACxC,mBAAqB,qBAAuB,uBAG/C,GAAIjF,EAAI,GACN,OAAOmD,KAAK+B,IAAM/B,KAAKgC,IAAIhC,KAAK+B,GAAKlF,GAAKgF,EAAM,EAAIhF,IAOtD,IAFA,IAAIoF,EAAIH,EAAE,GACJ5D,GAFNrB,GAAK,GAES,IACLc,EAAI,EAAGA,EAAImE,EAAElE,OAAQD,GAAK,EACjCsE,GAAKH,EAAEnE,IAAMd,EAAIc,GAGnB,OAAOqC,KAAKkC,KAAK,EAAIlC,KAAK+B,IAAG,SAAG7D,EAAMrB,EAAI,IAAOmD,KAAKmC,KAAKjE,GAAK+D,CAClE,EAEaG,EAAW,SAACC,GAEvB,IAAMC,EAAI,EAAI,YAAcD,EAAI,aAAeA,EAAI,GAAK,aAAeA,EAAI,GAAK,aAAeA,EAAI,GAAK,cAAiBA,EAAI,GAAK,YAAiBA,EAAI,GAGvJ,OAFYA,EAAI,IAAOrC,KAAKuC,IAAIF,EAAI,MAAQA,EAAI,KAAOrC,KAAKuC,IAAQ,cAAJD,EAGlE,EAEaE,EAAiB,SAACC,EAAGC,EAAGC,GASnC,IAPA,IAMIC,EANAC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAEFlD,KAAKC,KAAK8C,EAAKG,GAAMH,GAAM,MAChCG,EAAKH,EAILD,EAAKE,GAFLJ,IAAOF,EAAIO,IAAOP,EAAIC,EAAIM,GAAMR,GAAKC,EAAI,EAAIO,IAAOP,EAAI,EAAIO,EAAK,IAElDH,EAIfC,GALAF,EAAKE,EAAKH,EAAKC,IAIfD,GAFAK,GAAM,IAEKN,EAAIM,GAAMR,GAAKC,EAAI,EAAIO,EAAK,IAAMP,EAAI,EAAIO,IACtCF,EAEfF,GADAG,EAAKF,EAAKF,EAAKI,EAEfF,GAAME,EACND,GAAMC,EACNA,EAAK,EAEP,OAAOD,EAAKL,CACd,C,8ECtEO,IAAMS,EAAQ,KACRjD,EAAQ,C,mECerB,IAbkB,SAAC/B,GAAsB,IAAlBiF,EAAM,uDAAG,IACxB9F,GAAQ4C,EAAAA,EACR1C,EAAO0C,EAAAA,EAEPmD,EAAQC,MAAMC,KAAK,CAAE3F,OAAQwF,IAAUI,KAAI,SAACC,EAAG9F,GAAC,OAAKA,CAAC,IACtDd,EAAIwG,EAAMG,KAAI,SAACE,GAAC,OAAKnC,EAAAA,EAAAA,IAASmC,EAAG,EAAGN,EAAS,EAAG9F,EAAME,EAAK,IAC3DV,EAAID,EAAE2G,KAAI,SAACG,GAAE,OAAKC,EAAAA,EAAAA,GAAKD,EAAIxF,EAAG,IAEpC,MAAO,CACLtB,EAAAA,EAAGC,EAAAA,EAAGQ,KAAAA,EAAME,KAAAA,EAAMqG,KAAM7D,KAAK8D,IAAG,MAAR9D,MAAI,OAAQlD,IAAIiH,KAAM/D,KAAK8D,IAAG,MAAR9D,MAAI,OAAQlD,IAE9D,C,qCCGA,IAhBA,SAAcoB,EAAGC,GAKf,GAAW,IAAPA,EACF,OAAO,GAAK6B,KAAK+B,IAAM,EAAI7D,EAAIA,IAIjC,IAAMwF,EAAIvF,EAGV,OAFkB0D,EAAAA,EAAAA,KAAO6B,EAAI,GAAK,IAAM1D,KAAKkC,KAAKwB,EAAI1D,KAAK+B,KAAMF,EAAAA,EAAAA,IAAM6B,EAAI,IAE3D,SAAI,EAAKxF,EAAIA,EAAKwF,IAASA,EAAI,GAAK,EACtD,C","sources":["components/inputs/CurveAreaRadioButtons.jsx","components/inputs/numInputs/DfNumInput.jsx","components/inputs/numInputs/XNumInput.jsx","components/plots/plotlyUtils.js","components/forms/PFromTForm.jsx","components/plots/t/PFromTPlot.jsx","pages/tTable/PFromT.jsx","statistics/mathUtils.js","statistics/tTable/constants.js","statistics/tTable/genTCurve.js","statistics/tTable/tPDF.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport * as React from 'react';\n\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nfunction CurveAreaRadioButtons(props) {\n  const { hookSetter, defaultValue } = props;\n\n  const onChange = (event) => {\n    hookSetter(event.target.value);\n  };\n\n  return (\n    <FormControl>\n      <FormLabel id=\"curve-region-radio-buttons-group\">Region</FormLabel>\n      <RadioGroup\n        row\n        onChange={onChange}\n        aria-labelledby=\"curve-region-radio-buttons-group-label\"\n        defaultValue={defaultValue || 'outside'}\n        name=\"curve-region-radio-buttons-group\"\n      >\n        <FormControlLabel value=\"below\" control={<Radio />} label=\"Below\" />\n        <FormControlLabel value=\"above\" control={<Radio />} label=\"Above\" />\n        <FormControlLabel value=\"between\" control={<Radio />} label=\"Between\" />\n        <FormControlLabel value=\"outside\" control={<Radio />} label=\"Outside\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport default CurveAreaRadioButtons;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction DfInput(props) {\n  const { hookValue, hookSetter, step } = props;\n\n  const onChange = (event) => {\n    let v = event.target.value;\n    if (v < 1) v = 1;\n    hookSetter(v);\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Degrees of Freedom\"\n      value={hookValue}\n      inputProps={{\n        step: step || 1.0,\n      }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default DfInput;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction XInput(props) {\n  const {\n    hookValue, hookSetter, step, label,\n  } = props;\n\n  return (\n    <TextField\n      type=\"number\"\n      label={label || 'X'}\n      value={hookValue}\n      inputProps={{\n        step: step || 1.0,\n      }}\n      onChange={(event) => hookSetter(event.target.value)}\n    />\n  );\n}\n\nexport default XInput;\n","export const genCurvePlotData = (x, y) => {\n  const plotData = {\n    x,\n    y,\n    type: 'scatter',\n    mode: 'lines',\n    hovertemplate: '(%{x:.2f}, %{y:.2f})<extra></extra>',\n    line: { color: '#f77f00' },\n  };\n\n  return plotData;\n};\n\nexport const genShadedRegionPlotData = (x, y, x1, x2) => {\n  let minX = Number(x1);\n  let maxX = Number(x2);\n\n  if (minX > maxX) {\n    [minX, maxX] = [maxX, minX];\n  }\n\n  const rx = [];\n  const ry = [];\n\n  for (let i = 0; i < x.length - 1; i += 1) {\n    if (x[i] >= minX && x[i] <= maxX) {\n      rx.push(x[i]);\n      ry.push(y[i]);\n    }\n  }\n\n  return {\n    x: rx,\n    y: ry,\n    type: 'scatter',\n    mode: 'lines',\n    fill: 'tozeroy',\n    hoverinfo: 'skip',\n    line: { color: '#f77f00' },\n  };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nimport XInput from '../inputs/numInputs/XNumInput';\nimport CurveAreaRadioButtons from '../inputs/CurveAreaRadioButtons';\nimport DfInput from '../inputs/numInputs/DfNumInput';\n\nfunction PFromTForm(props) {\n  const { hookValues, hookSetters } = props;\n\n  const {\n    t, df, curveRegion,\n  } = hookValues;\n\n  const {\n    setT, setDF, setCurveRegion,\n  } = hookSetters;\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: 'auto',\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n\n        <Grid item align=\"center\" xs={12}>\n          <XInput label=\"t\" hookValue={t} hookSetter={setT} step={0.01} />\n          <DfInput hookValue={df} hookSetter={setDF} />\n        </Grid>\n\n        <Grid item align=\"center\" xs={12}>\n          <CurveAreaRadioButtons\n            hookValue={curveRegion}\n            hookSetter={setCurveRegion}\n            defaultValue={curveRegion}\n          />\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n}\n\nexport default PFromTForm;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nimport { MAX_T } from '../../../statistics/tTable/constants';\nimport genTCurve from '../../../statistics/tTable/genTCurve';\nimport { genCurvePlotData, genShadedRegionPlotData } from '../plotlyUtils';\n\nconst defineShadedRegionEndPoints = (t, selectedRegion) => {\n  const shadedRegionEndPoints = {\n    r1x1: null, r1x2: null, r2x1: null, r2x2: null, z: null,\n  };\n\n  if (Math.abs(t) >= MAX_T) {\n    shadedRegionEndPoints.z = Infinity;\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = MAX_T;\n  } else if (selectedRegion === 'below') {\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = t;\n  } else if (selectedRegion === 'above') {\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = t;\n    shadedRegionEndPoints.r1x2 = MAX_T;\n  } else if (selectedRegion === 'between') {\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -Math.abs(t);\n    shadedRegionEndPoints.r1x2 = Math.abs(t);\n  } else if (selectedRegion === 'outside') {\n    shadedRegionEndPoints.t = t;\n\n    shadedRegionEndPoints.r1x1 = -MAX_T;\n    shadedRegionEndPoints.r1x2 = -Math.abs(t);\n\n    shadedRegionEndPoints.r2x1 = Math.abs(t);\n    shadedRegionEndPoints.r2x2 = MAX_T;\n  }\n\n  return shadedRegionEndPoints;\n};\n\nfunction PFromTPlot(props) {\n  const { hookValues } = props;\n  const {\n    df,\n    area,\n    curveRegion,\n  } = hookValues;\n\n  const { x, y } = genTCurve(Number(df));\n\n  const {\n    r1x1, r1x2, r2x1, r2x2,\n  } = defineShadedRegionEndPoints(Number(area), curveRegion);\n\n  // Just data for curve's line, *no fill*\n  const plotData = [genCurvePlotData(x, y)];\n\n  // Check if shaded regions are requested\n  const plotRegion1 = r1x1 !== null && r1x2 !== null;\n  const plotRegion2 = r2x1 !== null && r2x2 !== null;\n\n  if (plotRegion1) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r1x1, r1x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (plotRegion2) {\n    const shadedRegionPlotData = genShadedRegionPlotData(x, y, r2x1, r2x2);\n\n    plotData.push(shadedRegionPlotData);\n  }\n\n  if (!plotRegion1 && !plotRegion2) {\n    plotData[0].fill = 'tozeroy';\n  }\n\n  return (\n    <div>\n      <hr />\n      <Plot\n        data={plotData}\n        layout={{\n          xaxis: { zeroline: false },\n          showlegend: false,\n          margin: {\n            l: 50,\n            r: 40,\n            b: 50,\n            t: 40,\n            pad: 4,\n          },\n        }}\n        config={{ displayModeBar: false }}\n      />\n    </div>\n  );\n}\n\nexport default PFromTPlot;\n","import React, { useState } from 'react';\nimport PFromTForm from '../../components/forms/PFromTForm';\nimport PFromTPlot from '../../components/plots/t/PFromTPlot';\n\nfunction PFromT() {\n  const [t, setT] = useState(1.96);\n  const [df, setDF] = useState(10);\n\n  const [curveRegion, setCurveRegion] = useState('outside');\n\n  const hookValues = {\n    t, df, curveRegion,\n  };\n\n  const hookSetters = {\n    setT, setDF, setCurveRegion,\n  };\n\n  return (\n    <div className=\"page\">\n      <PFromTForm hookValues={hookValues} hookSetters={hookSetters} />\n      <PFromTPlot hookValues={hookValues} />\n    </div>\n  );\n}\n\nexport default PFromT;\n","export const mapRange = (x, inMin, inMax, outMin, outMax) => {\n  let newX = x;\n\n  newX -= inMin;\n\n  newX *= (outMax - outMin);\n  newX /= (inMax - inMin);\n  newX += outMin;\n\n  return newX;\n};\n\nexport const gamma = (x) => {\n  // Gamma function implemented using the Lanczos approximation.\n  // This is a good general-purpose approximation with a few extra decimal places of precision.\n\n  const p = [\n    0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n    771.32342877765313, -176.61502916214059, 12.507343278686905,\n    -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7,\n  ];\n\n  if (x < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * x) * gamma(1 - x));\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  x -= 1;\n  let a = p[0];\n  const t = x + 7.5;\n  for (let i = 1; i < p.length; i += 1) {\n    a += p[i] / (x + i);\n  }\n  // eslint-disable-next-line no-bitwise\n  return Math.sqrt(2 * Math.PI) * t ** (x + 0.5) * Math.exp(-t) * a;\n};\n\nexport const logGamma = (Z) => {\n  // eslint-disable-next-line max-len\n  const S = 1 + 76.18009173 / Z - 86.50532033 / (Z + 1) + 24.01409822 / (Z + 2) - 1.231739516 / (Z + 3) + 0.00120858003 / (Z + 4) - 0.00000536382 / (Z + 5);\n  const LG = (Z - 0.5) * Math.log(Z + 4.5) - (Z + 4.5) + Math.log(S * 2.50662827465);\n\n  return LG;\n};\n\nexport const incompleteBeta = (X, A, B) => {\n  // Compute the incomplete beta function I_x(a, b).\n  let A0 = 0;\n  let B0 = 1;\n  let A1 = 1;\n  let B1 = 1;\n  let M9 = 0;\n  let A2 = 0;\n  let C9;\n  while (Math.abs((A1 - A2) / A1) > 0.00001) {\n    A2 = A1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = -(A + M9) * (A + B + M9) * X / (A + 2 * M9) / (A + 2 * M9 + 1);\n    A0 = A1 + C9 * A0;\n    B0 = B1 + C9 * B0;\n    M9 += 1;\n    // eslint-disable-next-line no-mixed-operators\n    C9 = M9 * (B - M9) * X / (A + 2 * M9 - 1) / (A + 2 * M9);\n    A1 = A0 + C9 * A1;\n    B1 = B0 + C9 * B1;\n    A0 /= B1;\n    B0 /= B1;\n    A1 /= B1;\n    B1 = 1;\n  }\n  return A1 / A;\n};\n","/* eslint-disable import/prefer-default-export */\nexport const MIN_T = 0.0001;\nexport const MAX_T = 5;\n","import { mapRange } from '../mathUtils';\nimport { MAX_T } from './constants';\nimport tPDF from './tPDF';\n\nconst genTCurve = (df, nSteps = 512) => {\n  const minX = -MAX_T;\n  const maxX = MAX_T;\n\n  const steps = Array.from({ length: nSteps }).map((_, i) => i);\n  const x = steps.map((n) => mapRange(n, 0, nSteps - 1, minX, maxX));\n  const y = x.map((xi) => tPDF(xi, df));\n\n  return {\n    x, y, minX, maxX, minY: Math.min(...y), maxY: Math.min(...y),\n  };\n};\n\nexport default genTCurve;\n","import { gamma } from '../mathUtils';\n\nfunction tPDF(t, df) {\n  // Compute the PDF of the Student's t distribution with `df` degrees of freedom\n  // at value `t`.\n\n  // Special case: df = 1 is the Cauchy distribution\n  if (df === 1) {\n    return 1 / (Math.PI * (1 + t * t));\n  }\n\n  // General case\n  const n = df;\n  const gammaTerm = gamma((n + 1) / 2) / (Math.sqrt(n * Math.PI) * gamma(n / 2));\n  // eslint-disable-next-line no-bitwise\n  return gammaTerm * (1 + (t * t) / n) ** (-(n + 1) / 2);\n}\n\nexport default tPDF;\n"],"names":["props","hookSetter","defaultValue","id","row","onChange","event","target","value","name","control","label","hookValue","step","type","inputProps","v","genCurvePlotData","x","y","mode","hovertemplate","line","color","genShadedRegionPlotData","x1","x2","minX","Number","maxX","rx","ry","i","length","push","fill","hoverinfo","hookValues","hookSetters","t","df","curveRegion","setT","setDF","setCurveRegion","Box","component","sx","width","m","noValidate","autoComplete","Grid","container","alignItems","justifyContent","item","align","xs","CurveAreaRadioButtons","area","genTCurve","selectedRegion","shadedRegionEndPoints","r1x1","r1x2","r2x1","r2x2","z","Math","abs","MAX_T","Infinity","defineShadedRegionEndPoints","plotData","plotRegion1","plotRegion2","shadedRegionPlotData","data","layout","xaxis","zeroline","showlegend","margin","l","r","b","pad","config","displayModeBar","useState","className","mapRange","inMin","inMax","outMin","outMax","newX","gamma","p","PI","sin","a","sqrt","exp","logGamma","Z","S","log","incompleteBeta","X","A","B","C9","A0","B0","A1","B1","M9","A2","MIN_T","nSteps","steps","Array","from","map","_","n","xi","tPDF","minY","min","maxY"],"sourceRoot":""}